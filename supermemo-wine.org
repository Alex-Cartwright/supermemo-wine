* Wine installers for SuperMemo using winetricks

[[https://orgmode.org/worg/org-contrib/babel/][https://img.shields.io/badge/org--babel-literate-informational.svg]]

Installing SuperMemo on Linux is finally +easier+ simpler.

[[https://i.imgur.com/elQIAuX.png]]

[[https://www.reddit.com/r/super_memo/comments/bv28ol/supermemowine_simple_installation_of_supermemo_on/][Reddit thread]].

** ðŸ‘‰ Be forewarned
The Wine SuperMemo experience is not as good as the Windows SuperMemo experience. Most core features are supported, save for incremental video, certain audio/video formats, and interaction with a running instance of Internet Explorer (e.g. the mass-import from browser feature is unusable). To import HTML content into SuperMemo, prefer web pages rendered by Firefox, then run the any HTML filters within SuperMemo (@@html:<kbd>@@F6@@html:</kbd>@@) as needed.

I deem the behavior of SuperMemo on Wine (on Linux specifically) appropriate for daily use.

For further guidance regarding installation, compatibility, configuration, troubleshooting, and more, there is a nifty document being worked on at SuperMemoPedia: [[https://supermemopedia.com/wiki/SuperMemo_for_Windows_under_Wine][SuperMemo for Windows under Wine]].

/Do not blame SuperMemo creators for incompatibilities on unsupported systems. Regressions in Wine do happen, from time to time, and may affect your experience./

** Provided installers
| Product                      | Year released | Last updated            | Type           | Installer        |
|------------------------------+---------------+-------------------------+----------------+------------------|
| SuperMemo 9 (aka. 98) [[http://super-memory.com/archive/help98/index.htm][(?)]]    |          1998 | May 7, 2005 (9.3)       | Freeware [[https://www.supermemo.com/en/archives1990-2015/archive/1998/sm98][(â†—)]]   | [[./verbs/supermemo9.verb][supermemo9.verb]]  |
| SuperMemo 12 (aka. 2004) [[http://super-memory.com/archive/help2004/index.htm][(?)]] |          2004 | Nov 6, 2010 (12.1 Beta) | Freeware [[http://super-memory.com/articles/soft/free.htm][(â†—)]]   | [[./verbs/supermemo12.verb][supermemo12.verb]] |
| SuperMemo 15 [[http://super-memory.com/archive/help15/index.htm][(?)]]             |          2011 | Jul 1, 2018 (15.5)      | Freeware [[http://super-memory.com/english/down.htm][(â†—)]]   | [[./verbs/supermemo15.verb][supermemo15.verb]] |
| SuperMemo 16 [[http://super-memory.com/archive/help16/index.htm][(?)]]             |          2013 | Apr 5, 2015 (16.1)      | Trial [[http://super-memory.com/english/down.htm][(â†—)]]      | [[./verbs/supermemo16.verb][supermemo16.verb]] |
| SuperMemo 17 [[http://super-memory.com/archive/help17/index.htm][(?)]]             |          2017 | Jun 11, 2018 (17.40)    | Commercial [[https://super-memo.com/supermemo17.html][(â†—)]] | [[./verbs/supermemo17.verb][supermemo17.verb]] |
| SuperMemo 18 [[https://help.supermemo.org/wiki/SuperMemo_18_Help][(?)]]             |          2019 | Jul 3, 2019 (18.03)     | Commercial [[https://super-memo.com/supermemo18.html][(â†—)]] | [[./verbs/supermemo18.verb][supermemo18.verb]] |

** Installing
First, make sure to get *[[https://wiki.winehq.org/Download][Wine]]* and *[[https://wiki.winehq.org/Winetricks][winetricks]]* for your system. Then, run one of the installers provided as verbs:

: $ env WINEARCH=win32 sh winetricks arch=32 prefix=[choose a prefix name] [file].verb

By default, wine prefixes created by winetricks will be stored in the folder =~/.local/share/wineprefixes/=.

*Quirk:* =env WINEARCH=win32= is needed at the front to avoid creation of a 64-bit prefix when an existing, default Wine prefix is already 64-bit. Installation of the required Internet Explorer 8 dependency only succeeds on a 32-bit prefix.

*** Example
To install SuperMemo 15 run:

  : $ env WINEARCH=win32 sh winetricks arch=32 prefix=supermemo15 supermemo15.verb

 The root of the wine prefix will then be =~/.local/share/wineprefixes/supermemo15/=.

*** Installation wizards
The installer takes care of running the installation of Internet Explorer 8 for SuperMemos that need it. This installation wizard needs to be attended. Any prompts to /install updates/, or /restart the system/ can be safely ignored or followed (they have no consequence). Actually restarting the system is not needed.

Installation steps in SuperMemos using installation wizards are handled automatically. Avoid moving focus away from the install wizard window during installation.

*** Running SuperMemo
On successful installation, an executable =.desktop= shortcut to start the application will be created in the application menu (/Education/ category), or the /Desktop/ folder as a fallback, if any of these is configured.

** During post-install
There are many convenient configuration steps to improve the behavior of SuperMemo. They are out of scope for these installersâ€“they're just concerned with the installation. However, consider the following:

*** Do not use the Wine prefix for collection data
Since wine prefixes can be removed with simple commands, it is recommended that you /do not store new collection data inside the wine prefix/. Do it in a dedicated folder that survives it, such as =~/sm/collections/=.

*** How to configure the Wine prefix
The canonical command to configure the wine prefix the software has been installed into is:

 : $ env WINEPREFIX=/path/to/wine/prefix winecfg

It is useful to disable handling of file associations with crippled Wine applications, so disable:

/Wine configuration â†’ Desktop integration â†’ Mime types â†’ [ ] Manage file associations/.

** Uninstalling
From the WineHQ Wiki ([[https://wiki.winehq.org/Winetricks#How_to_remove_things_installed_by_Winetricks][source]]):

#+BEGIN_QUOTE
Winetricks does not provide a way to uninstall individual apps or DLLs inside a Wine prefix. This is for several reasons, but mainly because the preferred way to uninstall anything in Wine is to simply install into a fresh Wine prefix.
#+END_QUOTE

*Be sure to back up any data saved in C:\\SuperMemo\\ you might need*.

To uninstall SuperMemo, simply delete the corresponding Wine prefix via =winetricks annihilate=. For instance, to uninstall SuperMemo 15 from the winetricks-managed prefix named /supermemo15/, run:

: $ env WINEARCH=win32 sh winetricks prefix=supermemo15 annihilate

From the winetricks command-line help:

#+BEGIN_QUOTE
annihilate

Delete ALL DATA AND APPLICATIONS INSIDE THIS WINEPREFIX
#+END_QUOTE

** Why add the winetricks dependency?
- winetricks may have produced the only reproducible 32-bit Internet Explorer 8 installation recipe that is kept up to date; it is rather complex and maintaining a separate one requires resources better spent elsewhere.
- winetricks has convenient shell functions for basic dependency management, checking download integrity, detecting existing installations, user interface automation via AutoHotKey, among others.
- advanced users will know which bits of winetricks to use or discard.

** Sources
/It is safe to skip this section if all you need is run the installers. Source code is embedded./

The following types of installer are supported:

1. Zip installers, whereby a zip file is uncompressed and one its executables run.
2. Executable installers, which run a graphical install wizard that retrieves and extracts files to the appropriate location.

Actions performed by installers are abstracted into a definition consisting of the following fields:

| =app-name=            | Short name for the application (unique)                                  |
| =app-title=           | Long name for the application                                            |
| =media-type=          | One of: "download", "manual_download"                                    |
| =installer-file-name= | Name of the file to be downloaded                                        |
| =installer-url=       | URL to the application distributable, or the website to download it from |
| =installer-sha256sum= | SHA-256 checksum, for integrity verification                             |
| =installed-exe=       | Name of the local executable that starts the application                 |
| =require-ie8-p=       | Whether Internet Explorer 8 is required                                  |

*** Utilities
#+NAME: elisp-utilities
#+BEGIN_SRC emacs-lisp :results silent
(require 'subr-x)

(defmacro with-plist-bindings (plist keys more-bindings body)
  "Transform a property list into a block of let* bindings, to be
combined with a list of additional bindings."
  (list 'let*
        (append (mapcar #'(lambda (k) (list k `(plist-get ,plist (quote ,k)))) keys)
                more-bindings)
        body))

(defun make-installer (script-body definition)
  (with-plist-bindings definition
                       (list app-name app-title media-type
                             installer-file-name installer-url
                             installer-sha256sum installed-exe
                             require-ie8-p)
                       (list
                        ;; command to download IE8, if applicable
                        (ie8-cmd (if require-ie8-p "w_call ie8" ""))
                        ;; command to download the distributable
                        (dl-cmd
                         (string-join (if (string= media-type "manual_download")
                                          (list "w_download_manual" installer-url installer-file-name installer-sha256sum)
                                        (list "w_download" installer-url installer-sha256sum)) " "))
                        ;; application icon
                        (icon (replace-regexp-in-string "\n\\'" ""
                                                        (shell-command-to-string "base64 ./assets/smglobe-64.png")))
                        ;; format specification
                        (fspec (format-spec-make
                                ?a app-name
                                ?t app-title
                                ?m media-type
                                ?i installer-file-name
                                ?u installer-url
                                ?s installer-sha256sum
                                ?x installed-exe
                                ?n icon
                                ?e ie8-cmd
                                ?d dl-cmd)))
                       (print (format-spec script-body fspec))))
#+END_SRC

*** Common script blocks

/installer-banner ::=/

#+NAME: installer-banner
#+BEGIN_SRC text
Automatically generated by supermemo-wine
URL: https://github.com/alessivs/supermemo-wine
Modify with care.
#+END_SRC

/installer-metadata ::=/

#+NAME: installer-metadata
#+BEGIN_SRC shell-script
w_metadata %a apps \\
    title=\"%t\" \\
    publisher=\"SuperMemo World\" \\
    media=\"%m\" \\
    file1=\"%i\" \\
    installed_exe1=\"c:/SuperMemo/%x\"
#+END_SRC

/installer-shortcut ::=/

#+NAME: installer-shortcut
#+BEGIN_SRC shell-script
cat <<EOF | base64 --decode > \"$WINEPREFIX/drive_c/SuperMemo/smicon.png\"
%n
EOF
(
    _W_shortcut=\"$W_TMP\"/%a.desktop
    cat > \"$_W_shortcut\" <<EOF
[Desktop Entry]
Name=%t
Exec=env WINEPREFIX=\"$WINEPREFIX\" wine \"$WINEPREFIX/drive_c/SuperMemo/%x\"
Type=Application
Categories=Education;
StartupNotify=true
Comment=Organize your knowledge and learn at the maximum possible speed
Path=$WINEPREFIX/drive_c/SuperMemo
Icon=$WINEPREFIX/drive_c/SuperMemo/smicon.png
StartupWMClass=%x
EOF
    chmod +x \"$_W_shortcut\"
    if test -d \"$XDG_DATA_HOME\" && test -d \"$XDG_DATA_HOME/applications\"; then
        cp \"$_W_shortcut\" \"$XDG_DATA_HOME/applications\"
    else
	if ! test -d \"$XDG_DESKTOP_DIR\" && test -f \"$XDG_CONFIG_HOME/user-dirs.dirs\"; then
            . \"$XDG_CONFIG_HOME/user-dirs.dirs\"
	fi
	if test -d \"$XDG_DESKTOP_DIR\"; then
            cp \"$_W_shortcut\" \"$XDG_DESKTOP_DIR\"
	fi
    fi
)
#+END_SRC

*** Zip installer template
#+NAME: zip-installer
#+BEGIN_SRC emacs-lisp :results silent :noweb yes
(defun make-zip-installer (&rest definition)
  (make-installer
   "# -*- Mode: shell-script; -*-
# Â«installer-bannerÂ»
Â«installer-metadataÂ»

load_%a()
{
    w_package_unsupported_win64
    %e
    w_call gdiplus_winxp
    w_call tahoma
    w_call fontsmooth=rgb
    w_call winxp
    %d
    w_try_unzip \"$W_DRIVE_C/SuperMemo\" \"$W_CACHE/$W_PACKAGE\"/%i
Â«installer-shortcutÂ»
}
" definition))
#+END_SRC

*** Wizard installer template
#+NAME: wizard-installer
#+BEGIN_SRC emacs-lisp :results silent :noweb yes
(defun make-wizard-installer (&rest definition)
  (make-installer
   "# -*- Mode: shell-script; -*-
# Â«installer-bannerÂ»
Â«installer-metadataÂ»

load_%a()
{
    w_package_unsupported_win64
    %e
    w_call gdiplus_winxp
    w_call tahoma
    w_call fontsmooth=rgb
    w_call winxp
    %d
    w_try_cd \"$W_CACHE/$W_PACKAGE\"
    w_ahk_do \"
        run, %i
        WinWait, SuperMemo Install Wizard, Welcome to the SuperMemo
        Sleep 800
        ControlClick, Button2
        WinWait, SuperMemo Install Wizard, Choose Install Folder
        Sleep 800
        ControlClick, Button2
        WinWait, SuperMemo Install Wizard, Choose Start Menu
        Sleep 800
        ControlClick, Button4
        Sleep 800
        ControlClick, Button2
        WinWait, SuperMemo Install Wizard, Choose Additional
        Sleep 800
        ControlClick, Button8
        Sleep 800
        ControlClick, Button2
        WinWait, SuperMemo Install Wizard, Completing the
        ControlClick, Button4
        Sleep 800
        ControlClick, Button2
        Sleep 800
        WinWaitClose, SuperMemo Install Wizard
    \"
Â«installer-shortcutÂ»
}
" definition))
#+END_SRC

*** SuperMemo 9 (aka. 98) installer
#+NAME: installer-sm9
#+BEGIN_SRC emacs-lisp :results value file :file verbs/supermemo9.verb
(make-zip-installer
 'app-name "supermemo9"
 'app-title "SuperMemo 98"
 'media-type "download"
 'installer-file-name "sm98.zip"
 'installer-url "https://supermemo.org/ftp/sm98.zip"
 'installer-sha256sum "a8064cc9a6f076779617a3228e49a91c48691c0870aa76b91c228ad00d4f7e5d"
 'installed-exe "sm98.exe"
 'require-ie8-p nil)
#+END_SRC

#+RESULTS: installer-sm9
[[file:verbs/supermemo9.verb]]

*** SuperMemo 12 (aka. 2004) installer
#+NAME: installer-sm12
#+BEGIN_SRC emacs-lisp :results value file :file verbs/supermemo12.verb
(make-zip-installer
 'app-name "supermemo12"
 'app-title "SuperMemo 2004"
 'media-type "download"
 'installer-file-name "sm2004.zip"
 'installer-url "https://supermemo.org/ftp/sm2004.zip"
 'installer-sha256sum "f2819822db0680b99f18cd2380bd2d14f2f62fe3281b7231be6d0a3d28a907a3"
 'installed-exe "sm2004.exe"
 'require-ie8-p t)
#+END_SRC

#+RESULTS: installer-sm12
[[file:verbs/supermemo12.verb]]

*** SuperMemo 15 installer
#+NAME: installer-sm15
#+BEGIN_SRC emacs-lisp :results value file :file verbs/supermemo15.verb
(make-wizard-installer
 'app-name "supermemo15"
 'app-title "SuperMemo 15"
 'media-type "download"
 'installer-file-name "sm15inst.exe"
 'installer-url "https://supermemo.org/install/sm15inst.exe"
 'installer-sha256sum "2add9eebc8398847e9a82b711ff88cd04fcba877700dc0f086630701bd98b5c4"
 'installed-exe "sm15.exe"
 'require-ie8-p t)
#+END_SRC

#+RESULTS: installer-sm15
[[file:verbs/supermemo15.verb]]

*** SuperMemo 16 installer
#+NAME: installer-sm16
#+BEGIN_SRC emacs-lisp :results value file :file verbs/supermemo16.verb
(make-wizard-installer
 'app-name "supermemo16"
 'app-title "SuperMemo 16"
 'media-type "download"
 'installer-file-name "sm16inst.exe"
 'installer-url "https://supermemo.org/install/sm16inst.exe"
 'installer-sha256sum "2add9eebc8398847e9a82b711ff88cd04fcba877700dc0f086630701bd98b5c4"
 'installed-exe "sm16.exe"
 'require-ie8-p t)
#+END_SRC

#+RESULTS: installer-sm16
[[file:verbs/supermemo16.verb]]

*** SuperMemo 17 installer
#+NAME: installer-sm17
#+BEGIN_SRC emacs-lisp :results value file :file verbs/supermemo17.verb
(make-wizard-installer
 'app-name "supermemo17"
 'app-title "SuperMemo 17"
 'media-type "manual_download"
 'installer-file-name "sm17inst.exe"
 'installer-url "https://super-memo.com"
 'installer-sha256sum "09269ed14c042099e492283e3d3376931c99e31b94d9e3d8b1ce0334a0386920"
 'installed-exe "sm17.exe"
 'require-ie8-p t)
#+END_SRC

#+RESULTS: installer-sm17
[[file:verbs/supermemo17.verb]]

*** SuperMemo 18 installer
#+NAME: installer-sm18
#+BEGIN_SRC emacs-lisp :results value file :file verbs/supermemo18.verb
(make-wizard-installer
 'app-name "supermemo18"
 'app-title "SuperMemo 18"
 'media-type "manual_download"
 'installer-file-name "sm18inst.exe"
 'installer-url "https://super-memo.com"
 'installer-sha256sum "87ebd4da706c825575655aeddc9a68291d52712880fe1c39e1e1d0a41853b35f"
 'installed-exe "sm18.exe"
 'require-ie8-p t)
#+END_SRC

#+RESULTS: installer-sm18
[[file:verbs/supermemo18.verb]]

* COMMENT Local vars
# Local Variables:
# org-confirm-babel-evaluate: nil
# org-babel-noweb-wrap-start: Â«
# org-babel-noweb-wrap-end: Â»
# End:

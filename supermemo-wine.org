#+TITLE: Installers for SuperMemo for Windows using Winetricks: The Sources

* Table of contents                                                :TOC_3_gh:
- [[#supported-installers][Supported installers]]
- [[#utilities][Utilities]]
- [[#common-script-blocks][Common script blocks]]
  - [[#banner][Banner]]
  - [[#installer-metadata][Installer metadata]]
  - [[#installer-shorcut][Installer shorcut]]
  - [[#winetricks-preinstall-tweaks][Winetricks preinstall tweaks]]
  - [[#zip-installer-template][Zip installer template]]
  - [[#wizard-installer-template][Wizard installer template]]
- [[#installer-creation][Installer creation]]
  - [[#supermemo-9-aka-98-installer][SuperMemo 9 (aka. 98) installer]]
  - [[#supermemo-12-aka-2004-installer][SuperMemo 12 (aka. 2004) installer]]
  - [[#supermemo-15-installer][SuperMemo 15 installer]]
  - [[#supermemo-16-installer][SuperMemo 16 installer]]
  - [[#supermemo-17-installer][SuperMemo 17 installer]]
  - [[#supermemo-18-installer][SuperMemo 18 installer]]

* Supported installers
The following types of installer are supported:

1. Zip installers, whereby a zip file is uncompressed and one its executables run.
2. Executable installers, which run a graphical install wizard that retrieves and extracts files to the appropriate location.

Actions performed by installers are abstracted into a definition consisting of the following fields:

| =app-name=            | Short name for the application (unique)                                  |
| =app-title=           | Long name for the application                                            |
| =media-type=          | One of: "download", "manual_download"                                    |
| =installer-file-name= | Name of the file to be downloaded                                        |
| =installer-url=       | URL to the application distributable, or the website to download it from |
| =installer-sha256sum= | SHA-256 checksum, for integrity verification                             |
| =installed-exe=       | Name of the local executable that starts the application                 |
| =require-ie8-p=       | Whether Internet Explorer 8 is required                                  |

* Utilities
#+NAME: elisp-utilities
#+BEGIN_SRC emacs-lisp :results silent
(require 'subr-x)

(defmacro with-plist-bindings (plist keys more-bindings body)
  "Transform a property list into a block of let* bindings, to be
combined with a list of additional bindings."
  (list 'let*
        (append (mapcar #'(lambda (k) (list k `(plist-get ,plist (quote ,k)))) keys)
                more-bindings)
        body))

(defun make-installer (script-body definition)
  (with-plist-bindings definition
                       (list app-name app-title media-type
                             installer-file-name installer-url
                             installer-sha256sum installed-exe
                             require-ie8-p)
                       (list
                        ;; command to download IE8, if applicable
                        (ie8-cmd (if require-ie8-p "w_call ie8" ""))
                        ;; command to download the distributable
                        (dl-cmd
                         (string-join (if (string= media-type "manual_download")
                                          (list "w_download_manual" installer-url installer-file-name installer-sha256sum)
                                        (list "w_download" installer-url installer-sha256sum)) " "))
                        ;; application icon
                        (icon (replace-regexp-in-string "\n\\'" ""
                                                        (shell-command-to-string "base64 ./assets/smglobe-64.png")))
                        ;; format specification
                        (fspec (format-spec-make
                                ?a app-name
                                ?t app-title
                                ?m media-type
                                ?i installer-file-name
                                ?u installer-url
                                ?s installer-sha256sum
                                ?x installed-exe
                                ?n icon
                                ?e ie8-cmd
                                ?d dl-cmd)))
                       (print (format-spec script-body fspec))))
#+END_SRC

* Common script blocks
** Banner
A top banner is included in the installer source, identifying the project and describing how to get help.

#+NAME: installer-banner
#+BEGIN_SRC text
Created by supermemo-wine
URL: https://github.com/alessivs/supermemo-wine
Edit with care.
#+END_SRC

** Installer metadata
Verbs need metadata in a prescribed format identifying the package name, publisher, type of install, and the name of the executable on disk.

#+NAME: installer-metadata
#+BEGIN_SRC shell-script
w_metadata %a apps \\
    title=\"%t\" \\
    publisher=\"SuperMemo World\" \\
    media=\"%m\" \\
    file1=\"%i\" \\
    installed_exe1=\"c:/SuperMemo/%x\"
#+END_SRC

** Installer shorcut
The installer creates a shortcut (desktop entry file) to simplify starting the program. First, the XDG user-specific data directory is tried (so that the program menu entry appears in the /Education/ category). If that folder cannot be found, the XDG Desktop directory is tried instead. It needs the ~base64~ tool to be available to decode the application icon into place.

#+NAME: installer-shortcut
#+BEGIN_SRC shell-script
cat <<EOF | base64 --decode > \"$WINEPREFIX/drive_c/SuperMemo/smicon.png\"
%n
EOF
(
    _W_shortcut=\"$W_TMP\"/%a.desktop
    cat > \"$_W_shortcut\" <<EOF
[Desktop Entry]
Name=%t
Exec=env WINEPREFIX=\"$WINEPREFIX\" wine \"$WINEPREFIX/drive_c/SuperMemo/%x\"
Type=Application
Categories=Education;
StartupNotify=true
Comment=Organize your knowledge and learn at the maximum possible speed
Path=$WINEPREFIX/drive_c/SuperMemo
Icon=$WINEPREFIX/drive_c/SuperMemo/smicon.png
StartupWMClass=%x
EOF
    chmod +x \"$_W_shortcut\"
    if test -d \"$XDG_DATA_HOME\" && test -d \"$XDG_DATA_HOME/applications\"; then
        cp \"$_W_shortcut\" \"$XDG_DATA_HOME/applications\"
    else
	if ! test -d \"$XDG_DESKTOP_DIR\" && test -f \"$XDG_CONFIG_HOME/user-dirs.dirs\"; then
            . \"$XDG_CONFIG_HOME/user-dirs.dirs\"
	fi
	if test -d \"$XDG_DESKTOP_DIR\"; then
            cp \"$_W_shortcut\" \"$XDG_DESKTOP_DIR\"
	fi
    fi
)
#+END_SRC

** Winetricks preinstall tweaks
The following verbs and/or packages are loaded previous to the program installation:

+ gdiplus_winxp :: Improves performance (e.g. during scroll) in presence of images in MSHTML (e.g. inline images, and background images). /(Thanks to user James at SuperMemopedia for the pointer)/
+ tahoma :: Provide a consistent visual with what is expected of Windows XP. This Tahoma font is not part of ~corefonts~ and allows some menu items to be properly rendered in bold.
+ fontsmooth=rgb :: Hints the prefix to adopt RGB font smoothing, with best results on LCD screens. The user can always change it through the registry or the ~winecfg~ tool.
+ winxp :: Ensures identification as Windows XP.

#+NAME: winetricks-preinstall-tweaks
#+begin_src shell-script
w_call gdiplus_winxp
w_call tahoma
w_call fontsmooth=rgb
w_call winxp
#+end_src

** Zip installer template
#+NAME: zip-installer
#+BEGIN_SRC emacs-lisp :results silent :noweb yes
(defun make-zip-installer (&rest definition)
  (make-installer
   "# -*- Mode: shell-script; -*-
# <<installer-banner>>
<<installer-metadata>>

load_%a()
{
    w_package_unsupported_win64
    %e
    <<winetricks-preinstall-tweaks>>
    %d
    w_try_unzip \"$W_DRIVE_C/SuperMemo\" \"$W_CACHE/$W_PACKAGE\"/%i
<<installer-shortcut>>
}
" definition))
#+END_SRC

** Wizard installer template
#+NAME: wizard-installer
#+BEGIN_SRC emacs-lisp :results silent :noweb yes
(defun make-wizard-installer (&rest definition)
  (make-installer
   "# -*- Mode: shell-script; -*-
# <<installer-banner>>
<<installer-metadata>>

load_%a()
{
    w_package_unsupported_win64
    %e
    <<winetricks-preinstall-tweaks>>
    %d
    w_try_cd \"$W_CACHE/$W_PACKAGE\"
    w_ahk_do \"
        run, %i
        WinWait, SuperMemo Install Wizard, Welcome to the SuperMemo
        Sleep 800
        ControlClick, Button2
        WinWait, SuperMemo Install Wizard, Choose Install Folder
        Sleep 800
        ControlClick, Button2
        WinWait, SuperMemo Install Wizard, Choose Start Menu
        Sleep 800
        ControlClick, Button4
        Sleep 800
        ControlClick, Button2
        WinWait, SuperMemo Install Wizard, Choose Additional
        Sleep 800
        ControlClick, Button8
        Sleep 800
        ControlClick, Button2
        WinWait, SuperMemo Install Wizard, Completing the
        ControlClick, Button4
        Sleep 800
        ControlClick, Button2
        Sleep 800
        WinWaitClose, SuperMemo Install Wizard
    \"
<<installer-shortcut>>
}
" definition))
#+END_SRC

* Installer creation
** SuperMemo 9 (aka. 98) installer
#+NAME: installer-sm9
#+BEGIN_SRC emacs-lisp :results value file :file verbs/supermemo9.verb
(make-zip-installer
 'app-name "supermemo9"
 'app-title "SuperMemo 98"
 'media-type "download"
 'installer-file-name "sm98.zip"
 'installer-url "https://supermemo.org/ftp/sm98.zip"
 'installer-sha256sum "a8064cc9a6f076779617a3228e49a91c48691c0870aa76b91c228ad00d4f7e5d"
 'installed-exe "sm98.exe"
 'require-ie8-p nil)
#+END_SRC

#+RESULTS: installer-sm9
[[file:verbs/supermemo9.verb]]

** SuperMemo 12 (aka. 2004) installer
#+NAME: installer-sm12
#+BEGIN_SRC emacs-lisp :results value file :file verbs/supermemo12.verb
(make-zip-installer
 'app-name "supermemo12"
 'app-title "SuperMemo 2004"
 'media-type "download"
 'installer-file-name "sm2004.zip"
 'installer-url "https://supermemo.org/ftp/sm2004.zip"
 'installer-sha256sum "f2819822db0680b99f18cd2380bd2d14f2f62fe3281b7231be6d0a3d28a907a3"
 'installed-exe "sm2004.exe"
 'require-ie8-p t)
#+END_SRC

#+RESULTS: installer-sm12
[[file:verbs/supermemo12.verb]]

** SuperMemo 15 installer
#+NAME: installer-sm15
#+BEGIN_SRC emacs-lisp :results value file :file verbs/supermemo15.verb
(make-wizard-installer
 'app-name "supermemo15"
 'app-title "SuperMemo 15"
 'media-type "download"
 'installer-file-name "sm15inst.exe"
 'installer-url "https://supermemo.org/install/sm15inst.exe"
 'installer-sha256sum "2add9eebc8398847e9a82b711ff88cd04fcba877700dc0f086630701bd98b5c4"
 'installed-exe "sm15.exe"
 'require-ie8-p t)
#+END_SRC

#+RESULTS: installer-sm15
[[file:verbs/supermemo15.verb]]

** SuperMemo 16 installer
#+NAME: installer-sm16
#+BEGIN_SRC emacs-lisp :results value file :file verbs/supermemo16.verb
(make-wizard-installer
 'app-name "supermemo16"
 'app-title "SuperMemo 16"
 'media-type "download"
 'installer-file-name "sm16inst.exe"
 'installer-url "https://supermemo.org/install/sm16inst.exe"
 'installer-sha256sum "2add9eebc8398847e9a82b711ff88cd04fcba877700dc0f086630701bd98b5c4"
 'installed-exe "sm16.exe"
 'require-ie8-p t)
#+END_SRC

#+RESULTS: installer-sm16
[[file:verbs/supermemo16.verb]]

** SuperMemo 17 installer
#+NAME: installer-sm17
#+BEGIN_SRC emacs-lisp :results value file :file verbs/supermemo17.verb
(make-wizard-installer
 'app-name "supermemo17"
 'app-title "SuperMemo 17"
 'media-type "manual_download"
 'installer-file-name "sm17inst.exe"
 'installer-url "https://super-memo.com"
 'installer-sha256sum "09269ed14c042099e492283e3d3376931c99e31b94d9e3d8b1ce0334a0386920"
 'installed-exe "sm17.exe"
 'require-ie8-p t)
#+END_SRC

#+RESULTS: installer-sm17
[[file:verbs/supermemo17.verb]]

** SuperMemo 18 installer
#+NAME: installer-sm18
#+BEGIN_SRC emacs-lisp :results value file :file verbs/supermemo18.verb
(make-wizard-installer
 'app-name "supermemo18"
 'app-title "SuperMemo 18"
 'media-type "manual_download"
 'installer-file-name "sm18inst.exe"
 'installer-url "https://super-memo.com"
 'installer-sha256sum "87ebd4da706c825575655aeddc9a68291d52712880fe1c39e1e1d0a41853b35f"
 'installed-exe "sm18.exe"
 'require-ie8-p t)
#+END_SRC

#+RESULTS: installer-sm18
[[file:verbs/supermemo18.verb]]

* COMMENT Local vars
# Local Variables:
# org-confirm-babel-evaluate: nil
# End:
